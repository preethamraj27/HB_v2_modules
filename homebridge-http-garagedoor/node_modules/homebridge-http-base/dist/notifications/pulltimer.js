"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PullTimer = void 0;
const utils = __importStar(require("../utils"));
class PullTimer {
    constructor(log, interval, handler, successHandler) {
        this.log = log;
        this.interval = interval;
        this.handler = handler;
        this.successHandler = successHandler;
    }
    start() {
        if (!this.timeout) {
            this.timeout = setTimeout(this.handleTimer.bind(this), this.interval);
        }
        else {
            this.timeout.refresh();
        }
    }
    resetTimer() {
        if (!this.timeout)
            return;
        this.timeout.refresh();
    }
    stop() {
        if (this.timeout) {
            clearTimeout(this.timeout);
        }
        this.timeout = undefined;
    }
    handleTimer() {
        this.handler(utils.once((error, value) => {
            if (error)
                this.log("Error occurred while pulling update from switch: " + error.message);
            else
                this.successHandler(value);
            this.resetTimer();
        }));
    }
}
exports.PullTimer = PullTimer;
//# sourceMappingURL=pulltimer.js.map